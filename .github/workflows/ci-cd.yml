name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

jobs:
  # Building and testing the backend
  build-and-test-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install backend dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Run backend tests
      #   run: |
      #     cd backend
      #     pytest

  # Building and testing frontend
  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies and test
        run: |
          cd frontend
          yarn install
          yarn test --watchAll=false

  # Build and push docker images
  build-and-push-docker-images:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend-api:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend-api:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend-react:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend-react:latest

  # Deploying to Kubernetes
  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-images
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy backend and frontend to Kubernetes with dynamic image names
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          echo "Deploying backend..."
          sed "s|your-dockerhub-username|$DOCKER_USERNAME|g" k8s/backend-deployment.yaml | kubectl apply -f -
          sed "s|your-dockerhub-username|$DOCKER_USERNAME|g" k8s/backend-service.yaml | kubectl apply -f -
          echo "Deploying frontend..."
          sed "s|your-dockerhub-username|$DOCKER_USERNAME|g" k8s/frontend-deployment.yaml | kubectl apply -f -
          sed "s|your-dockerhub-username|$DOCKER_USERNAME|g" k8s/frontend-service.yaml | kubectl apply -f -

      - name: Verify rollout status
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl rollout status deployment/backend-deployment
          kubectl rollout status deployment/frontend-deployment
